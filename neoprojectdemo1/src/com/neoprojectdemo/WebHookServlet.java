package com.neoprojectdemo;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.annotation.Resource;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.http.HttpStatus;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.HttpClientBuilder;
//import org.apache.log4j.Logger;

import com.sap.cloud.account.TenantContext;
import com.neoprojectdemo.BackendSystemClient;
import com.neoprojectdemo.SCCHttpClient;

@WebServlet("/WebHookServlet")
public class WebHookServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;
	// private static final Logger LOGGER =
	// Logger.getLogger(WebHookServlet.class);
	private static final String DESTINATION_NAME = "BRLA_PRNT_01";
	private static final String SYSTEM_PROP_VERIFICATION_TOKEN = "verificationToken";
    private final static Logger LOGGER = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
	@Resource
	private TenantContext tenantContext;

	/**
	 * Verification token generated by the web hook service.
	 */
	private String verificationToken;

	@Override
	public void init() throws ServletException {
		super.init();
		verificationToken = System.getProperty(SYSTEM_PROP_VERIFICATION_TOKEN);
	}

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.getWriter().print("123");
		URL url = new URL("http://mfes300705.eu.merckgroup.com");
		URI uri=null;
		HttpPost httpPost = new HttpPost(url.toString());
		httpPost.setHeader("Content-Type", "application/ipp");
		String httpScheme = uri.getScheme().replace("ipp", "http");
		URI httpUri = URI.create(String.format("%s:%s", httpScheme, uri.getSchemeSpecificPart()));
		ByteArrayOutputStream out1 = new ByteArrayOutputStream();
		Writer writer = new OutputStreamWriter(out1, "UTF-8");
		//writeXml(writer);
		httpPost.setEntity(new ByteArrayEntity(out1.toByteArray()));
		doPost(req, resp);
	}

	@Override
	public void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		PrintWriter out = resp.getWriter();
		// try {
		// try () {
		SCCHttpClient sccClient = createSCCHttpClient();
		URL url = new URL("https://mfes300705.eu.merckgroup.com");
		URI uri=null;
		try {
			uri = url.toURI();
		} catch (URISyntaxException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		BackendSystemClient client = new BackendSystemClient(sccClient, DESTINATION_NAME, uri);
		client.post(readPayload(req));
		// }
		LOGGER.log(Level.SEVERE,"WEB STATUS CODE:" + HttpStatus.SC_CREATED);
		resp.setStatus(HttpStatus.SC_CREATED);
		// } catch (IOException e) {
		// String message = "Unexpected exception occurred";
		// LOGGER.error(message, e);
		// resp.sendError(HttpStatus.SC_INTERNAL_SERVER_ERROR, message);
		// }
		resp.setContentType("text/plain");
		out.print("Response:" + resp + DESTINATION_NAME);
	}

	private String readPayload(HttpServletRequest request) throws IOException {
		StringBuilder payload = new StringBuilder(request.getContentLength());
		try (BufferedReader reader = new BufferedReader(request.getReader())) {
			String line = null;
			while ((line = reader.readLine()) != null) {
				payload.append(line);
			}
		}
		return payload.toString();
	}

	@SuppressWarnings("deprecation")
	private SCCHttpClient createSCCHttpClient() {
		return new SCCHttpClient(HttpClientBuilder.create(), tenantContext.getAccountName());
	}
	
}